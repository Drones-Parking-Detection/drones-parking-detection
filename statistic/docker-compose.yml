services:
  s3:
    image: quay.io/minio/minio
    container_name: "s3-container"
    command: server /data --console-address ":9090"
    environment:
      - MINIO_ROOT_USER=UserParking
      - MINIO_ROOT_PASSWORD=PassWordParking
    volumes:
      - "~/minio/data:/data"
    ports:
      - "9000:9000" # Operation
      - "9090:9090" # Interface
  
  spark_kafkatominio:
    build:
      context: ./kafkaToMinio
      dockerfile: Dockerfile
    container_name: "spark-kafkatominio-container"
    depends_on:
      - s3
    environment:
      - SPARK_MASTER_NAME=spark-master
      - SPARK_MASTER_PORT=7077
      - SPARK_WORKER_CORES=2
      - SPARK_WORKER_MEMORY=2G
      - SPARK_DRIVER_MEMORY=2G
    ports:
      - "7077:7077"

  spark_statistic:
    build:
      context: ./statistic
      dockerfile: Dockerfile
    container_name: "spark-statistic-container"
    depends_on:
      - s3
      - postgres
    environment:
      - SPARK_MASTER_NAME=spark-master
      - SPARK_MASTER_PORT=7077
      - SPARK_WORKER_CORES=2
      - SPARK_WORKER_MEMORY=2G
      - SPARK_DRIVER_MEMORY=2G

  postgres:
    image: postgres:13
    container_name: "postgres-container"
    environment:
      POSTGRES_USER: UserParking
      POSTGRES_PASSWORD: PassWordParking
      POSTGRES_DB: DBParking
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  grafana:
    image: grafana/grafana
    container_name: "grafana-container"
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=UserParking
      - GF_SECURITY_ADMIN_PASSWORD=PassWordParking
    depends_on:
      - postgres

volumes:
  pgdata:
